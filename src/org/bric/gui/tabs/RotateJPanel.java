/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bric.gui.tabs;

import java.util.Random;
import org.bric.imageEditParameters.RotateParameters;

/**
 *
 * @author vasilis
 */
public class RotateJPanel extends javax.swing.JPanel  implements ImageEditTab{

    
    private int rotationUpLimit = 360,
            rotationDownLimit = 0;
    private int randomAngle;
    private int min, max;
    private Random rand = new Random();
    
    /**
     * Creates new form RotateJPanel
     */
    public RotateJPanel() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        jCheckBox2 = new javax.swing.JCheckBox();
        jRadioButton12 = new javax.swing.JRadioButton();
        jRadioButton13 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jSlider3 = new javax.swing.JSlider();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jSpinner6 = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        jRotator1 = new org.bric.gui.rotate.JRotator();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("lang/gui/tabs/Bundle"); // NOI18N
        jCheckBox2.setText(bundle.getString("RotateJPanel.jCheckBox2.text")); // NOI18N
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton12);
        jRadioButton12.setSelected(true);
        jRadioButton12.setText(bundle.getString("RotateJPanel.jRadioButton12.text")); // NOI18N
        jRadioButton12.setEnabled(false);
        jRadioButton12.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton12ItemStateChanged(evt);
            }
        });

        buttonGroup2.add(jRadioButton13);
        jRadioButton13.setText(bundle.getString("RotateJPanel.jRadioButton13.text")); // NOI18N
        jRadioButton13.setEnabled(false);
        jRadioButton13.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButton13ItemStateChanged(evt);
            }
        });

        jLabel11.setText(bundle.getString("RotateJPanel.jLabel11.text")); // NOI18N
        jLabel11.setEnabled(false);

        jTextField4.setText(bundle.getString("RotateJPanel.jTextField4.text")); // NOI18N
        jTextField4.setEnabled(false);
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField4KeyReleased(evt);
            }
        });

        jSlider3.setMajorTickSpacing(45);
        jSlider3.setMaximum(360);
        jSlider3.setMinorTickSpacing(5);
        jSlider3.setPaintLabels(true);
        jSlider3.setPaintTicks(true);
        jSlider3.setValue(0);
        jSlider3.setEnabled(false);
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider3StateChanged(evt);
            }
        });

        jCheckBox7.setText(bundle.getString("RotateJPanel.jCheckBox7.text")); // NOI18N
        jCheckBox7.setEnabled(false);
        jCheckBox7.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox7ItemStateChanged(evt);
            }
        });

        jCheckBox8.setText(bundle.getString("RotateJPanel.jCheckBox8.text")); // NOI18N
        jCheckBox8.setEnabled(false);

        jCheckBox9.setText(bundle.getString("RotateJPanel.jCheckBox9.text")); // NOI18N
        jCheckBox9.setEnabled(false);
        jCheckBox9.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox9ItemStateChanged(evt);
            }
        });

        jSpinner6.setModel(new javax.swing.SpinnerNumberModel(0, 0, 360, 1));
        jSpinner6.setEnabled(false);
        jSpinner6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner6StateChanged(evt);
            }
        });

        jLabel12.setText(bundle.getString("RotateJPanel.jLabel12.text")); // NOI18N
        jLabel12.setEnabled(false);

        jSpinner5.setModel(new javax.swing.SpinnerNumberModel(360, 0, 360, 1));
        jSpinner5.setEnabled(false);
        jSpinner5.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner5StateChanged(evt);
            }
        });

        jLabel13.setText(bundle.getString("RotateJPanel.jLabel13.text")); // NOI18N
        jLabel13.setEnabled(false);

        jLabel14.setText(bundle.getString("RotateJPanel.jLabel14.text")); // NOI18N
        jLabel14.setEnabled(false);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "180° Upside Down", "90° Counter Clockwise", "90° Clockwise", "Horizontal Flip", "Horizontal + Vertical Flip", "Vertical Flip" }));
        jComboBox6.setEnabled(false);

        jRotator1.setEnabled(false);
        jRotator1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRotator1MouseClicked(evt);
            }
        });
        jRotator1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jRotator1MouseDragged(evt);
            }
        });

        javax.swing.GroupLayout jRotator1Layout = new javax.swing.GroupLayout(jRotator1);
        jRotator1.setLayout(jRotator1Layout);
        jRotator1Layout.setHorizontalGroup(
            jRotator1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        jRotator1Layout.setVerticalGroup(
            jRotator1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox2)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton12)
                                .addGap(18, 18, 18)
                                .addComponent(jRadioButton13))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox7)
                                    .addComponent(jCheckBox9))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jCheckBox8)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRotator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSlider3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jRadioButton12)
                    .addComponent(jRadioButton13))
                .addGap(2, 2, 2)
                .addComponent(jRotator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox9)
                    .addComponent(jLabel13)
                    .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jSpinner6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        rotateTabEnable();
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jRadioButton12ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton12ItemStateChanged
        rotateTabEnable();
    }//GEN-LAST:event_jRadioButton12ItemStateChanged

    private void jRadioButton13ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButton13ItemStateChanged
        rotateTabEnable();
    }//GEN-LAST:event_jRadioButton13ItemStateChanged

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        rotateFieldAction();
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyReleased
        rotateFieldAction();
    }//GEN-LAST:event_jTextField4KeyReleased

    private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
        jRotator1.setAngle(jSlider3.getValue());
        if (!jTextField4.hasFocus()) {
            jTextField4.setText(jRotator1.getAngle() + "°");
        }
    }//GEN-LAST:event_jSlider3StateChanged

    private void jCheckBox7ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox7ItemStateChanged
        rotateTabEnable();
    }//GEN-LAST:event_jCheckBox7ItemStateChanged

    private void jCheckBox9ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox9ItemStateChanged
        rotateTabEnable();
    }//GEN-LAST:event_jCheckBox9ItemStateChanged

    private void jSpinner6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner6StateChanged
        setRotationLimit();
    }//GEN-LAST:event_jSpinner6StateChanged

    private void jSpinner5StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner5StateChanged
        setRotationLimit();
    }//GEN-LAST:event_jSpinner5StateChanged

    private void jRotator1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRotator1MouseClicked
       jSlider3.setValue(jRotator1.getAngle());
       jTextField4.setText(jRotator1.getAngle() + "°");
    }//GEN-LAST:event_jRotator1MouseClicked

    private void jRotator1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRotator1MouseDragged
        jSlider3.setValue(jRotator1.getAngle());
        jTextField4.setText(jRotator1.getAngle() + "°");
    }//GEN-LAST:event_jRotator1MouseDragged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JRadioButton jRadioButton12;
    private javax.swing.JRadioButton jRadioButton13;
    private org.bric.gui.rotate.JRotator jRotator1;
    private javax.swing.JSlider jSlider3;
    private javax.swing.JSpinner jSpinner5;
    private javax.swing.JSpinner jSpinner6;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    @Override
    public RotateParameters getImageEditParameters() {
        RotateParameters rotateParameters = new RotateParameters();
        rotateParameters.setEnabled(jCheckBox2.isSelected());
        rotateParameters.setCustom(jRadioButton12.isSelected());
        rotateParameters.setPredefined(jRadioButton13.isSelected());
        int angle = jRotator1.getAngle();
        rotateParameters.setAngle(angle);
        rotateParameters.setRandom(jCheckBox7.isSelected());
        rotateParameters.setDifferentValues(jCheckBox8.isSelected());
        rotateParameters.setLimit(jCheckBox9.isSelected());
        rotateParameters.setFrom((Integer)jSpinner6.getValue());
        rotateParameters.setTo((Integer)jSpinner5.getValue());
        rotateParameters.setAction(jComboBox6.getSelectedIndex());
        rotateParameters.setRandomAngle(calculateRandomAngle());

        return rotateParameters;
    }
    
    private int calculateRandomAngle(){
        if(jCheckBox9.isSelected()){
            min = Integer.parseInt(jSpinner6.getValue().toString());
            max = Integer.parseInt(jSpinner5.getValue().toString());
            
            if(min > max){
                int reminder = max;
                max = min;
                min = reminder;
            }
            
            randomAngle = rand.nextInt(max-min+1)+min;
        } else {
            randomAngle = rand.nextInt(360);
        }
        return randomAngle; 
    }
    
    private void rotateTabEnable() {
        boolean enable = jCheckBox2.isSelected();
        boolean predefined = jRadioButton13.isSelected();
        boolean random = jCheckBox7.isSelected();
        boolean limit = jCheckBox9.isSelected();
        jRadioButton12.setEnabled(enable);
        jRadioButton13.setEnabled(enable);
        jRotator1.setEnabled(enable & !random & !predefined);
        jLabel11.setEnabled(enable & !random & !predefined);
        jTextField4.setEnabled(enable & !random & !predefined);
        jSlider3.setEnabled(enable & !random & !predefined);
        jCheckBox7.setEnabled(enable & !predefined);
        jCheckBox8.setEnabled(enable & random & !predefined);
        jCheckBox9.setEnabled(enable & random & !predefined);
        jLabel12.setEnabled(enable & !predefined & limit & random);
        jSpinner6.setEnabled(enable & !predefined & limit & random);
        jLabel13.setEnabled(enable & !predefined & limit & random);
        jSpinner5.setEnabled(enable & !predefined & limit & random);
        jLabel14.setEnabled(enable & predefined);
        jComboBox6.setEnabled(enable & predefined);
    }
    
    private void rotateFieldAction() {
        int symbol = jTextField4.getText().contains("°") ? 1 : 0;
        int fieldNumber = 0;
        try {
            fieldNumber = Integer.parseInt(jTextField4.getText(0, jTextField4.getText().length() - symbol));
        } catch (Exception ex) {
//            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (fieldNumber <= 360 && fieldNumber >= 0 && jTextField4.getText().length() >= 1) {
            jRotator1.setAngle(fieldNumber);
            jSlider3.setValue(fieldNumber);
        }
    }
    
    private void setRotationLimit() {
        rotationDownLimit = Integer.parseInt(jSpinner6.getValue().toString());
        rotationUpLimit = Integer.parseInt(jSpinner5.getValue().toString());

        if (rotationDownLimit > rotationUpLimit) {
            int tempValue = rotationDownLimit;
            rotationDownLimit = rotationUpLimit;
            rotationUpLimit = tempValue;
        }
    }
    
}
